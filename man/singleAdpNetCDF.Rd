% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/singleAdpNetCDF.R
\name{singleAdpNetCDF}
\alias{singleAdpNetCDF}
\title{Convert adp object to netCDF}
\usage{
singleAdpNetCDF(
  adp,
  name,
  debug = 0,
  data = NULL,
  ioos = TRUE,
  destination = "."
)
}
\arguments{
\item{adp}{an adp object from the oce class}

\item{name}{name of the netCDF file (not including the extension) to be produced}

\item{debug}{integer value indicating level of debugging.
If this is less than 1, no debugging is done. Otherwise,
some functions will print debugging information.}

\item{data}{a data frame of standard name, name, units, and GF3 codes likely from getStandardData}

\item{ioos}{a Boolean indicating the metadata and data should abide by the IOOS
(Integrated Ocean Observing System) standards. If not, all metadata found in the CTD and RCM
files are added to the NetCDF under global attributes, and the units, standard names (CF compliant)
and long names are added to the variable attributes.}

\item{destination}{the specified location to save the NetCDF. By default this is set
to the local directory}
}
\description{
This function exports an adp object to a netCDF using variables
and metadata within adp combined. Data variables names and units
are named inserted in CF standards using the \code{\link[=standardName]{standardName()}} function.
}
\examples{
\dontrun{
library(oceToNetCDF)
data <- getStandardData(type="adcp")
f1 <- system.file("extdata", "adcp1.ODF", package="oceToNetCDF")
f2 <- system.file("extdata", "adcp2.ODF", package="oceToNetCDF")
files <- c(f1,f2)
adp <- compileOdfToAdp(files)
adp2 <- nameReplacement(adp, data=data)
adp3 <- structureAdp(adp2)
singleAdpNetCDF(adp3, name="test", debug=1, data=data)
}

}
